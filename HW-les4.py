# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания 
# все те числа, которые встречаются в обоих наборах.

# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы множеств.

# n = int(input('Введите длину 1 списка: '))
# m = int(input('Введите длину 2 списка: '))

# Можно было бы сразу преобразовать в множество, а не создавать списки, а потом переводить, сделал так, потому что в условиях задачи 
# говориться о том, что числа могут повторяться

# list_n = []
# print('Введите значения элементов списка n: ')
# for i in range(n):
#     list_n.append(int(input()))
# list_m = []
# print('Введите значения элементов списка m: ')
# for i in range(m):
#     list_m.append(int(input()))

# # Еще можно было бысделать ввод как строчных элементов, а потом упорядочить через split, для простоты ввода, но я не придумал
# # как привязать к строке длину ножеств, которые мы задаем

# mnog_n = set(list_n)
# print(f'Множество n: {mnog_n}')
# mnog_m = set(list_m)
# print(f'Множество m: {mnog_m}')
# mnog_u = mnog_n.intersection(mnog_m)
# print(f'Множество уникальных элементов: {mnog_u}')

# # Загуглил как упорядочить списки, из всех возможных вариантов этот понравилься больше всего
# mnog_up = sorted(mnog_u)
# print(f'Список упорядоченных элементов: {mnog_up}')

# 11 6
# 2 4 6 8 10 12 10 8 6 4 2
# 3 6 9 12 15 18
# 6 12

# ---------------------------------------------------------------------------------------------------------------------------------------

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, причем кусты высажены только по окружности. 
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов. 
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
#
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких 
# собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# 
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь 
# перед некоторым кустом заданной во входном файле грядки.

# Взял именно множество так как знал, как через ключи, присвоить к каждому кусту рандомное значение ягод
import random
n = int(input('Введите число кустов: '))
yagoda = {}
# {0: 1, 1: 2, 2: 3, 3: 4} для проверки, можно закомитить цикл ниже, ввод n и присвоить эти значения yagoda

for i in range(n):
    yagoda[i] = yagoda.get(i, random.randint(2,8))
print(yagoda)

# Число ягод с 1, 2 и последнего куста
max_yagod = yagoda[0] + yagoda[1] + yagoda[len(yagoda) - 1]

# Наибольшее из суммы: (1, 2, последнего) и (предпоследнего, последнего, 1) кустов
if max_yagod < yagoda[len(yagoda) - 2] + yagoda[len(yagoda) - 1] + yagoda[0]:
    max_yagod = yagoda[len(yagoda) -2] + yagoda[len(yagoda) - 1] + yagoda[0]

# Сравнение со всеми промежуточными значениями
for i in range(len(yagoda) - 2):
    if yagoda[i] + yagoda[i + 1] + yagoda[i + 2] > max_yagod:
        max_yagod = yagoda[i] + yagoda[i + 1] + yagoda[i + 2]
print(f'Макчимальное количество ягод - {max_yagod}')

# 4 -> 1 2 3 4
# 9

# Решение задачи я нашел, хочется узнать его оптимальную версию 

# ---------------------------------------------------------------------------------------------------------------------------------------
